/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sas;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Arrays;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.Position;

/**
 *
 * @author Ravi9
 */
public class Tea_module extends javax.swing.JFrame {

    /**
     * Creates new form Tea_module
     */
    public Tea_module() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        Add_teacher = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        tidfield = new javax.swing.JTextField();
        tnamefield = new javax.swing.JTextField();
        tphnfield = new javax.swing.JTextField();
        subfield = new javax.swing.JComboBox<>();
        jScrollPane5 = new javax.swing.JScrollPane();
        clsfield = new javax.swing.JList<>();
        jButton1 = new javax.swing.JButton();
        Fire_teacher = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jComboBox4 = new javax.swing.JComboBox<>();
        jScrollPane6 = new javax.swing.JScrollPane();
        jList4 = new javax.swing.JList<>();
        jLabel33 = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton7 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        Edit_panel = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        idField = new javax.swing.JTextField();
        nameField = new javax.swing.JTextField();
        phoneField = new javax.swing.JTextField();
        subjectCombo = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        classList = new javax.swing.JList<>();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(153, 153, 153));
        setResizable(false);

        jTabbedPane1.setBackground(new java.awt.Color(204, 204, 204));
        jTabbedPane1.setForeground(null);

        Add_teacher.setBackground(new java.awt.Color(204, 204, 204));

        jLabel1.setBackground(new java.awt.Color(102, 102, 255));
        jLabel1.setFont(new java.awt.Font("Pristina", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Add Teacher");
        jLabel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jLabel1.setOpaque(true);

        jLabel12.setForeground(null);
        jLabel12.setText("ID");

        jLabel13.setForeground(null);
        jLabel13.setText("Name");

        jLabel29.setForeground(null);
        jLabel29.setText("PHONE");

        jLabel30.setForeground(null);
        jLabel30.setText("SUBJECT");

        jLabel31.setForeground(null);
        jLabel31.setText("CLASSES");

        tnamefield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tnamefieldActionPerformed(evt);
            }
        });

        subfield.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "English", "Hindi", "Math", "Science", "Computer" }));

        clsfield.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "6th", "7th", "8th", "9th", "10th" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane5.setViewportView(clsfield);

        jButton1.setText("INSERT");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Add_teacherLayout = new javax.swing.GroupLayout(Add_teacher);
        Add_teacher.setLayout(Add_teacherLayout);
        Add_teacherLayout.setHorizontalGroup(
            Add_teacherLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 885, Short.MAX_VALUE)
            .addGroup(Add_teacherLayout.createSequentialGroup()
                .addGap(377, 377, 377)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(Add_teacherLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(Add_teacherLayout.createSequentialGroup()
                    .addGap(0, 265, Short.MAX_VALUE)
                    .addGroup(Add_teacherLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(Add_teacherLayout.createSequentialGroup()
                            .addComponent(jLabel12)
                            .addGap(100, 100, 100)
                            .addComponent(tidfield, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(Add_teacherLayout.createSequentialGroup()
                            .addComponent(jLabel13)
                            .addGap(79, 79, 79)
                            .addComponent(tnamefield, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(Add_teacherLayout.createSequentialGroup()
                            .addComponent(jLabel29)
                            .addGap(73, 73, 73)
                            .addComponent(tphnfield, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(Add_teacherLayout.createSequentialGroup()
                            .addComponent(jLabel30)
                            .addGap(61, 61, 61)
                            .addComponent(subfield, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(Add_teacherLayout.createSequentialGroup()
                            .addComponent(jLabel31)
                            .addGap(59, 59, 59)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGap(0, 265, Short.MAX_VALUE)))
        );
        Add_teacherLayout.setVerticalGroup(
            Add_teacherLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Add_teacherLayout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 334, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(71, 71, 71))
            .addGroup(Add_teacherLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(Add_teacherLayout.createSequentialGroup()
                    .addGap(0, 123, Short.MAX_VALUE)
                    .addGroup(Add_teacherLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(Add_teacherLayout.createSequentialGroup()
                            .addGap(3, 3, 3)
                            .addComponent(jLabel12))
                        .addComponent(tidfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(31, 31, 31)
                    .addGroup(Add_teacherLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel13)
                        .addComponent(tnamefield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(24, 24, 24)
                    .addGroup(Add_teacherLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(Add_teacherLayout.createSequentialGroup()
                            .addGap(3, 3, 3)
                            .addComponent(jLabel29))
                        .addComponent(tphnfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(24, 24, 24)
                    .addGroup(Add_teacherLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(Add_teacherLayout.createSequentialGroup()
                            .addGap(4, 4, 4)
                            .addComponent(jLabel30))
                        .addComponent(subfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(28, 28, 28)
                    .addGroup(Add_teacherLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel31)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(0, 124, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Add_teacher, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Add_teacher, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Add Teacher", jPanel1);

        Fire_teacher.setBackground(new java.awt.Color(204, 204, 204));

        jLabel2.setBackground(new java.awt.Color(102, 102, 255));
        jLabel2.setFont(new java.awt.Font("Pristina", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Fire Teacher");
        jLabel2.setOpaque(true);

        jLabel32.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel32.setForeground(new java.awt.Color(255, 255, 255));
        jLabel32.setText("Search By Subject");

        jComboBox4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select a Subject", "English", "Hindi", "Math", "Science", "Computer" }));

        jList4.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "6th", "7th", "8th", "9th", "10th" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane6.setViewportView(jList4);

        jLabel33.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel33.setForeground(new java.awt.Color(255, 255, 255));
        jLabel33.setText("Search By Class");

        jTable1.setBackground(new java.awt.Color(240, 240, 240));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Teacher id", "Name", "Phone", "class_teaching", "Subject"
            }
        ));
        jScrollPane7.setViewportView(jTable1);

        jButton7.setText("Search");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton2.setText("DELETE");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Fire_teacherLayout = new javax.swing.GroupLayout(Fire_teacher);
        Fire_teacher.setLayout(Fire_teacherLayout);
        Fire_teacherLayout.setHorizontalGroup(
            Fire_teacherLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(Fire_teacherLayout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(jScrollPane7)
                .addContainerGap())
            .addGroup(Fire_teacherLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel32)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(56, 56, 56)
                .addComponent(jLabel33)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(Fire_teacherLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton7)
                    .addComponent(jButton2))
                .addContainerGap(38, Short.MAX_VALUE))
        );
        Fire_teacherLayout.setVerticalGroup(
            Fire_teacherLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Fire_teacherLayout.createSequentialGroup()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(Fire_teacherLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Fire_teacherLayout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(Fire_teacherLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(Fire_teacherLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(Fire_teacherLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(Fire_teacherLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(Fire_teacherLayout.createSequentialGroup()
                                .addComponent(jButton7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton2))
                            .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(40, 40, 40)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(45, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Fire Teacher", Fire_teacher);

        Edit_panel.setBackground(new java.awt.Color(204, 204, 204));
        Edit_panel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel5.setBackground(new java.awt.Color(102, 102, 255));
        jLabel5.setFont(new java.awt.Font("Pristina", 1, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Edit Teacher Information");
        jLabel5.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jLabel5.setOpaque(true);
        Edit_panel.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -1, 890, 90));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(204, 204, 204));
        jLabel3.setText("ID");
        Edit_panel.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 113, -1, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(204, 204, 204));
        jLabel4.setText("Name");
        Edit_panel.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 163, -1, -1));

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(204, 204, 204));
        jLabel9.setText("PHONE");
        Edit_panel.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 212, -1, -1));

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(204, 204, 204));
        jLabel10.setText("SUBJECT");
        Edit_panel.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 259, -1, -1));

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(204, 204, 204));
        jLabel11.setText("CLASSES");
        Edit_panel.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 307, -1, -1));

        idField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                idFieldKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                idFieldKeyTyped(evt);
            }
        });
        Edit_panel.add(idField, new org.netbeans.lib.awtextra.AbsoluteConstraints(312, 110, 213, -1));

        nameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameFieldActionPerformed(evt);
            }
        });
        Edit_panel.add(nameField, new org.netbeans.lib.awtextra.AbsoluteConstraints(312, 163, 213, -1));
        Edit_panel.add(phoneField, new org.netbeans.lib.awtextra.AbsoluteConstraints(312, 209, 213, -1));

        subjectCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "English", "Hindi", "Math", "Science", "Computer" }));
        Edit_panel.add(subjectCombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(312, 255, 222, -1));

        classList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "6th", "7th", "8th", "9th", "10th" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(classList);

        Edit_panel.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 310, 222, 93));

        jButton5.setText("UPDATE");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        Edit_panel.add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 420, -1, -1));

        jButton6.setText("SEARCH");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        Edit_panel.add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 110, -1, -1));

        jLabel7.setText("Class");
        Edit_panel.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 310, 30, -1));

        jLabel8.setText("ID");
        Edit_panel.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 120, -1, -1));

        jLabel14.setText("Name");
        Edit_panel.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 170, -1, -1));

        jLabel15.setText("Mobile");
        Edit_panel.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 210, -1, -1));

        jLabel16.setText("Subject");
        Edit_panel.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 260, -1, -1));

        jTabbedPane1.addTab("Edit Teacher", Edit_panel);

        jLabel6.setBackground(new java.awt.Color(255, 51, 51));
        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("<html>&#8592;</html>");
        jLabel6.setBorder(new javax.swing.border.MatteBorder(null));
        jLabel6.setOpaque(true);
        jLabel6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel6MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(119, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 869, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(109, 109, 109))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(24, Short.MAX_VALUE)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 580, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void nameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameFieldActionPerformed

    private void tnamefieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tnamefieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tnamefieldActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        Connection conn;
        boolean isError = false;
        try {
            conn = DBConnection.getInstance().getConnection();
            String tid = tidfield.getText();
            String name = tnamefield.getText();
            String phone = tphnfield.getText();
            String subject = (String) subfield.getSelectedItem();
            List<String> classes = clsfield.getSelectedValuesList();

            // Validate input values
            if (tid.isEmpty() || name.isEmpty() || phone.isEmpty() || subject.isEmpty() || classes.isEmpty()) {
                JOptionPane.showMessageDialog(null, "Please fill in all fields.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            if (!tid.matches("[0-9]+")) {
                JOptionPane.showMessageDialog(null, "Teacher ID must be a number.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            if (!phone.matches("[0-9]{10}")) {
                JOptionPane.showMessageDialog(null, "Phone number must be a 10-digit number.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            conn.setAutoCommit(false); // Start a transaction

            // Insert data into teachers table
            String insertTeacherSql = "INSERT INTO teachers VALUES (?, ?, ?)";
            try {
                PreparedStatement insertTeacherStmt = conn.prepareStatement(insertTeacherSql);
                insertTeacherStmt.setString(1, tid);
                insertTeacherStmt.setString(2, name);
                insertTeacherStmt.setString(3, phone);
                insertTeacherStmt.executeUpdate();
            } catch (SQLException ex) {
                ex.printStackTrace();
                JOptionPane.showMessageDialog(null, "Error inserting data into teachers table.", "Error", JOptionPane.ERROR_MESSAGE);
                isError = true;
            }

            // Insert data into teacher_subject_class table
            String checkExistingSql = "SELECT COUNT(*) FROM teacher_subject_class WHERE  class_taught = ? AND subject = ?";
            String insertTeacherSubjectClassSql = "INSERT INTO teacher_subject_class VALUES (?, ?, ?)";
            try {
                PreparedStatement checkExistingStmt = conn.prepareStatement(checkExistingSql);
                PreparedStatement insertTeacherSubjectClassStmt = conn.prepareStatement(insertTeacherSubjectClassSql);
                for (String cls : classes) {
//            checkExistingStmt.setString(1, tid);
                    checkExistingStmt.setString(1, cls);
                    checkExistingStmt.setString(2, subject);
                    ResultSet result = checkExistingStmt.executeQuery();
                    if (result.next() && result.getInt(1) > 0) {
                        JOptionPane.showMessageDialog(null, "Teacher has been assigned to the class already. ", "Error", JOptionPane.ERROR_MESSAGE);
                        isError = true;
                        break; // Exit the loop since an error occurred
                    } else {
                        insertTeacherSubjectClassStmt.setString(1, tid);
                        insertTeacherSubjectClassStmt.setString(2, cls);
                        insertTeacherSubjectClassStmt.setString(3, subject);
                        insertTeacherSubjectClassStmt.executeUpdate();
                    }
                }
            } catch (SQLException ex) {
                ex.printStackTrace();
                JOptionPane.showMessageDialog(null, "Error inserting data into teacher_subject_class table.", "Error", JOptionPane.ERROR_MESSAGE);
                isError = true;
            }

            if (isError) {
                conn.rollback(); // Rollback the transaction
//        JOptionPane.showMessageDialog(null, "Error occurred. Transaction cancelled.", "Error", JOptionPane.ERROR_MESSAGE);
            } else {
                conn.commit(); // Commit the transaction
                JOptionPane.showMessageDialog(null, "Data inserted successfully.", "Success", JOptionPane.INFORMATION_MESSAGE);
            }

        } catch (SQLException ex) {
            Logger.getLogger(Tea_module.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_jButton1ActionPerformed

    private void idFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_idFieldKeyTyped
        // TODO add your handling code here:

    }//GEN-LAST:event_idFieldKeyTyped

//    idField.addKeyListener(new java.awt.event.KeyAdapter() {
//    public void keyPressed(java.awt.event.KeyEvent evt) {
//        idFieldKeyPressed(evt);
//    }
//});

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        String id = idField.getText();
        String name = nameField.getText();
        String phone = phoneField.getText();
        List<String> selectedClasses = classList.getSelectedValuesList();
        String subject = (String) subjectCombo.getSelectedItem();

        Connection conn = null;
        PreparedStatement stmt = null;
        ResultSet rs = null;

        try {
            conn = DBConnection.getInstance().getConnection();
            conn.setAutoCommit(false);

            // Check if any other teacher is teaching the same subject to the same class
            String checkSql = "SELECT tid FROM teacher_subject_class WHERE subject = ? AND class_taught = ?";
            stmt = conn.prepareStatement(checkSql);
            stmt.setString(1, subject);
            stmt.setString(2, selectedClasses.get(0)); // Assume that only one class can be selected at a time
            rs = stmt.executeQuery();

            if (rs.next()) {
                String tid = rs.getString("tid");
                if (!tid.equals(id)) {
                    JOptionPane.showMessageDialog(null, "Error: Another teacher is already teaching " + subject + " to " + selectedClasses.get(0), "Error", JOptionPane.ERROR_MESSAGE);
                    conn.rollback();
                    return;
                }
            }

            // Delete old teacher_subject_class records for this teacher
            String deleteSql = "DELETE FROM teacher_subject_class WHERE tid = ?";
            stmt = conn.prepareStatement(deleteSql);
            stmt.setString(1, id);
            stmt.executeUpdate();

            // Update teacher record
            String updateSql = "UPDATE teachers SET tname = ?, phone = ? WHERE tid = ?";
            stmt = conn.prepareStatement(updateSql);
            stmt.setString(1, name);
            stmt.setString(2, phone);
            stmt.setString(3, id);
            stmt.executeUpdate();

            // Insert new teacher_subject_class records for this teacher
            String insertSql = "INSERT INTO teacher_subject_class (tid, subject, class_taught) VALUES (?, ?, ?)";
            stmt = conn.prepareStatement(insertSql);
            for (String className : selectedClasses) {
                stmt.setString(1, id);
                stmt.setString(2, subject);
                stmt.setString(3, className);
                stmt.executeUpdate();
            }

            conn.commit();
            JOptionPane.showMessageDialog(null, "Data updated successfully.", "Success", JOptionPane.INFORMATION_MESSAGE);
        } catch (SQLException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(null, "Error updating data.", "Error", JOptionPane.ERROR_MESSAGE);
            try {
                conn.rollback();
            } catch (SQLException ex2) {
                ex2.printStackTrace();
            }
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void idFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_idFieldKeyPressed
        // TODO add your handling code here:


    }//GEN-LAST:event_idFieldKeyPressed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        String id = idField.getText();
        Connection conn = null;
        PreparedStatement stmt = null;
        ResultSet rs = null;

        try {
            conn = DBConnection.getInstance().getConnection();

            // Fetch teacher data
            String teacherSql = "SELECT * FROM teachers WHERE tid = ?";
            stmt = conn.prepareStatement(teacherSql);
            stmt.setString(1, id);
            rs = stmt.executeQuery();

            if (rs.next()) {
                // Fill form fields with teacher data
                String name = rs.getString("tname");
                String phone = rs.getString("phone");
                nameField.setText(name);
                phoneField.setText(phone);
            } else {
                System.out.println("hbhjnn");
                // Clear form fields if no teacher data found
                nameField.setText("");
                phoneField.setText("");
            }

            // Fetch teacher subject class data
            String teacherSubClassSql = "SELECT * FROM teacher_subject_class WHERE tid = ?";
            stmt = conn.prepareStatement(teacherSubClassSql);
            stmt.setString(1, id);
            rs = stmt.executeQuery();

            // Clear list and combo box components
            classList.clearSelection();
            subjectCombo.removeAllItems();

            while (rs.next()) {
                // Add class data to list component
                String classTaught = rs.getString("class_taught");
                int classIndex = classList.getNextMatch(classTaught, 0, Position.Bias.Forward);
                if (classIndex != -1) {
                    classList.addSelectionInterval(classIndex, classIndex);
                }

                // Add subject data to combo box component
                String subject = rs.getString("subject");
                subjectCombo.addItem(subject);
            }
        } catch (SQLException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(null, "Error fetching data from database.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        // Assuming the auto-generated code has created a JTable named 'teacherTable'
    Connection conn;
     if (jComboBox4.getSelectedItem().equals("Select a Subject") && jList4.isSelectionEmpty()) {
    System.out.println("nkn");
    try {
        conn = DBConnection.getInstance().getConnection();
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();

        // Clear the table model before adding new rows
        model.setRowCount(0);

        String sql = "SELECT teachers.tid, teachers.tname, teachers.phone, teacher_subject_class.class_taught, teacher_subject_class.subject "
                   + "FROM teachers "
                   + "JOIN teacher_subject_class ON teachers.tid = teacher_subject_class.tid ";

        Statement stmt = conn.createStatement();
        ResultSet rs = stmt.executeQuery(sql);

        while (rs.next()) {
            Object[] row = new Object[5];
            for (int i = 1; i <= 5; i++) {
                row[i - 1] = rs.getObject(i);
            }
            model.addRow(row);
        }
    } catch (SQLException ex) {
        System.out.println(ex.getMessage());
    }
} else {
    String selectedSubject = (String) jComboBox4.getSelectedItem();
    List<String> selectedClasses = jList4.getSelectedValuesList();

//    Connection conn;
    try {
        conn = DBConnection.getInstance().getConnection();
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();

        // Clear the table model before adding new rows
        model.setRowCount(0);

        String sql = "SELECT teachers.tid, teachers.tname, teachers.phone, teacher_subject_class.class_taught, teacher_subject_class.subject "
                   + "FROM teachers "
                   + "JOIN teacher_subject_class ON teachers.tid = teacher_subject_class.tid ";

        boolean whereAdded = false;

        if (selectedSubject != null && !selectedSubject.equals("Select a Subject")) {
            sql += "WHERE teacher_subject_class.subject = '" + selectedSubject + "' ";
            whereAdded = true;
        }

        if (!selectedClasses.isEmpty()) {
            if (whereAdded) {
                sql += "AND ";
            } else {
                sql += "WHERE ";
            }
            sql += "teacher_subject_class.class_taught IN (";
            for (String selectedClass : selectedClasses) {
                sql += "'" + selectedClass + "',";
            }
            sql = sql.substring(0, sql.length() - 1);
            sql += ") ";
        }

        Statement stmt = conn.createStatement();
        ResultSet rs = stmt.executeQuery(sql);

        while (rs.next()) {
            Object[] row = new Object[5];
            for (int i = 1; i <= 5; i++) {
                row[i - 1] = rs.getObject(i);
            }
            model.addRow(row);
        }
    } catch (SQLException ex) {
        System.out.println(ex.getMessage());
    }
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    
    
    
    
    private void jLabel6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel6MouseClicked
        // TODO add your handling code here:
        new Welcome().setVisible(true);
        dispose();
    }//GEN-LAST:event_jLabel6MouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
         int selectedRow = jTable1.getSelectedRow();
    if (selectedRow == -1) {
        JOptionPane.showMessageDialog(this, "Please select a teacher to delete.", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }
    int confirmDialog = JOptionPane.showConfirmDialog(this, "Are you sure you want to delete this teacher?", "Confirm Delete", JOptionPane.YES_NO_OPTION);
    if (confirmDialog == JOptionPane.YES_OPTION) {
        String selectedTeacherId = jTable1.getValueAt(selectedRow, 0).toString();
        try {
            Connection conn = DBConnection.getInstance().getConnection();
            PreparedStatement pstmt = conn.prepareStatement("DELETE FROM teachers WHERE tid = ?");
            pstmt.setString(1, selectedTeacherId);
            pstmt.executeUpdate();
            JOptionPane.showMessageDialog(this, "Teacher deleted successfully.", "Success", JOptionPane.INFORMATION_MESSAGE);
            
            // Update the table model
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            model.removeRow(selectedRow);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error deleting teacher: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Tea_module.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Tea_module.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Tea_module.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Tea_module.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Tea_module().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Add_teacher;
    private javax.swing.JPanel Edit_panel;
    private javax.swing.JPanel Fire_teacher;
    private javax.swing.JList<String> classList;
    private javax.swing.JList<String> clsfield;
    private javax.swing.JTextField idField;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JComboBox<String> jComboBox4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JList<String> jList4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField nameField;
    private javax.swing.JTextField phoneField;
    private javax.swing.JComboBox<String> subfield;
    private javax.swing.JComboBox<String> subjectCombo;
    private javax.swing.JTextField tidfield;
    private javax.swing.JTextField tnamefield;
    private javax.swing.JTextField tphnfield;
    // End of variables declaration//GEN-END:variables
}
